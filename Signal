Implement a C/C++ program to ignore the signal (SIGINT)
#include <signal.h>
#include <iostream.h>
#include <unistd.h>
void main()
{
signal(SIGINT,SIG_IGN) ;
while(1)
cout<<"hello\t ";
}
Implement a C/C++ program to catch the signal (SIGINT)
#include <signal.h>
#include <iostream.h>
#include <unistd.h>
#include <stdlib.h>
void handler(int signo)
{
cout<<"\nsignal handlar : catched signal num is =>"<<signo<<endl;
exit(0);
}
void main()
{
signal(SIGINT,handler) ;
while(1)
cout<<"hello \t ";
}
Implement a C/C++ program to accept the signal (SIGINT)
#include <iostream.h>
#include <unistd.h>
void main()
{
signal(SIGINT, SIG_DFL) ;
while(1)
cout<<"hello\t";
}


Implement a C/C++ program to demonstrate the usage of alarm() API
#include <signal.h>
#include <iostream.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
void handler(int signum)
{
cout<<"\t Alarm time out .. signum is: "<<signum<<endl;
getchar();
}
void main()
{
signal(SIGALRM,handler);
alarm(1);
while(1)
cout<<"hello\t";
}
